// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            BigInt  @id @default(autoincrement())
  roles         UserRole[] @default([USER])
  passwordHash  String
  email         String  @unique
  name          String?
  imageId       BigInt?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  image         DbFileRef? @relation(fields: [imageId], references: [id])
  jwt           Jwt[]
}

enum JwtType {
  ACCESS_TOKEN
  REFRESH_TOKEN
}

model Jwt {
  id           BigInt   @id @default(autoincrement())
  type         JwtType
  uid          String   @db.VarChar(32)
  expirationAt DateTime
  userId       BigInt?
  meta         Json?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user         User? @relation(fields: [userId], references: [id])

  @@unique([type, uid])
}

model DbFileRef {
  id          BigInt       @id @default(autoincrement())
  uid         String       @unique @db.VarChar(24)
  fileId      BigInt 

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users       User[]
  file DbFile   @relation(fields: [fileId], references: [id])
}

enum MediaType {
  OTHER
  IMAGE
  VIDEO
  AUDIO
}

model DbFile {
  id          BigInt @id @default(autoincrement())
  mime        String @db.VarChar(255) // mime type
  sha256      String @db.VarChar(64) @unique
  size        Int // bytes size
  width       Int? // for image or video
  height      Int? // for image or video
  durationSec Int? // for video or audio
  pathToFile  String @db.VarChar(255) // local path

  type        MediaType
  isBanned    Boolean   @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  refs        DbFileRef[]
}